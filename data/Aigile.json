[
  {
    "_id": "10663",
    "key": "AIG-299",
    "assignee": 0,
    "components_name": "",
    "created_date": "2025-06-22 07:55:37",
    "description": "Implement the logic to send and receive chat messages over the established WebSocket connection, updating the chat window UI in real-time.",
    "issue_type_name": "Task",
    "labels": "API-Integration, Chat, WebSockets",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Implement Real-time Message Sending/Receiving"
  },
  {
    "_id": "10662",
    "key": "AIG-298",
    "assignee": 0,
    "components_name": "",
    "created_date": "2025-06-22 07:55:35",
    "description": "Establish a client-side WebSocket connection to the real-time chat server. Manage the connection lifecycle (connecting, disconnecting, handling errors).",
    "issue_type_name": "Task",
    "labels": "API-Integration, Chat, WebSockets",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Establish WebSocket Connection for Chat"
  },
  {
    "_id": "10661",
    "key": "AIG-297",
    "assignee": 0,
    "components_name": "",
    "created_date": "2025-06-22 07:55:34",
    "description": "Build the UI for the chat pop-up window. It should include a header with the friend's name, a scrollable message history area, and a message input form at the bottom.",
    "issue_type_name": "Task",
    "labels": "Chat, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Build the Individual Chat Window UI"
  },
  {
    "_id": "10660",
    "key": "AIG-296",
    "assignee": 0,
    "components_name": "",
    "created_date": "2025-06-22 07:55:32",
    "description": "Create a Protected Route HOC (Higher-Order Component) or wrapper that checks for user authentication before rendering a component, redirecting to login if the user is not authenticated.",
    "issue_type_name": "Task",
    "labels": "Architecture, Routing, Security",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Implement Protected Routes for Authentication"
  },
  {
    "_id": "10659",
    "key": "AIG-295",
    "assignee": 0,
    "components_name": "",
    "created_date": "2025-06-22 07:55:31",
    "description": "Set up client-side routing using a library like React Router to enable seamless navigation between different pages (e.g., Home, Profile, Settings) without full reloads.",
    "issue_type_name": "Task",
    "labels": "Architecture, Routing",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Implement Client-Side Routing"
  },
  {
    "_id": "10658",
    "key": "AIG-294",
    "assignee": 0,
    "components_name": "",
    "created_date": "2025-06-22 07:55:30",
    "description": "Build the left-hand navigation sidebar, containing links to the user's profile, 'Friends', 'Groups', 'Events', and 'Memories'.",
    "issue_type_name": "Task",
    "labels": "Navigation, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Build the Left Navigation Sidebar"
  },
  {
    "_id": "10657",
    "key": "AIG-293",
    "assignee": 0,
    "components_name": "",
    "created_date": "2025-06-22 07:55:28",
    "description": "Develop the responsive top navigation bar. It must include the app logo, a search input, and icons for Home, Friends, and Notifications, along with a profile dropdown.",
    "issue_type_name": "Task",
    "labels": "Navigation, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Build the Top Navigation Bar"
  },
  {
    "_id": "10656",
    "key": "AIG-292",
    "assignee": 0,
    "components_name": "",
    "created_date": "2025-06-22 07:55:27",
    "description": "Build the application's main shell, establishing the persistent top navigation bar and the main content area. This will serve as the template for all logged-in pages.",
    "issue_type_name": "Task",
    "labels": "Architecture, Layout, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Create the Main Application Shell and Layout"
  },
  {
    "_id": "10655",
    "key": "AIG-291",
    "assignee": 1,
    "components_name": "",
    "created_date": "2025-06-22 07:55:25",
    "description": "Connect the 'Confirm' and 'Delete' friend request buttons to the appropriate backend APIs to accept or reject friendships.",
    "issue_type_name": "Task",
    "labels": "API-Integration, Friends",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: API Integration to Accept/Reject Friend Requests"
  },
  {
    "_id": "10654",
    "key": "AIG-290",
    "assignee": 1,
    "components_name": "",
    "created_date": "2025-06-22 07:55:24",
    "description": "Create the UI for managing incoming friend requests. This should include 'Confirm' and 'Delete' buttons for each request.",
    "issue_type_name": "Task",
    "labels": "Friends, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Create UI for Managing Friend Requests"
  },
  {
    "_id": "10653",
    "key": "AIG-289",
    "assignee": 1,
    "components_name": "",
    "created_date": "2025-06-22 07:55:22",
    "description": "Implement the 'Add Friend' button logic. On click, it should send a friend request via the API and update its state to 'Request Sent'.",
    "issue_type_name": "Task",
    "labels": "API-Integration, Friends",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Implement Send Friend Request Logic"
  },
  {
    "_id": "10652",
    "key": "AIG-288",
    "assignee": 1,
    "components_name": "",
    "created_date": "2025-06-22 07:55:21",
    "description": "Build the UI for the 'Friends' tab on the profile page, displaying a grid of the user's connections. Each friend card should link to their respective profile.",
    "issue_type_name": "Task",
    "labels": "Friends, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Build the 'Friends' Tab UI"
  },
  {
    "_id": "10651",
    "key": "AIG-287",
    "assignee": 1,
    "components_name": "",
    "created_date": "2025-06-22 07:55:20",
    "description": "On the profile page, create a dedicated feed that shows only the posts made by that specific user. Reuse the Post component created for the News Feed.",
    "issue_type_name": "Task",
    "labels": "Feed, Profile, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Display User's Own Posts on Profile"
  },
  {
    "_id": "10650",
    "key": "AIG-286",
    "assignee": 1,
    "components_name": "",
    "created_date": "2025-06-22 07:55:18",
    "description": "Integrate the profile page to fetch and display user-specific data from the `/api/users/:userId` endpoint. Handle cases for viewing your own profile vs. someone else's.",
    "issue_type_name": "Task",
    "labels": "API-Integration, Profile",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: API Integration to Fetch Profile Data"
  },
  {
    "_id": "10649",
    "key": "AIG-285",
    "assignee": 1,
    "components_name": "",
    "created_date": "2025-06-22 07:55:17",
    "description": "Develop the profile's navigation tabs (e.g., Posts, About, Friends, Photos). Clicking a tab should dynamically render the appropriate content below without a page reload.",
    "issue_type_name": "Task",
    "labels": "Navigation, Profile, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Build the Profile Page Navigation Tabs"
  },
  {
    "_id": "10648",
    "key": "AIG-284",
    "assignee": 1,
    "components_name": "",
    "created_date": "2025-06-22 07:55:16",
    "description": "Design and build the main layout for the User Profile page. This includes the large cover photo area, the circular profile picture, user's name, and bio.",
    "issue_type_name": "Task",
    "labels": "Layout, Profile, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Create the Profile Page Header and Layout"
  },
  {
    "_id": "10647",
    "key": "AIG-283",
    "assignee": 2,
    "components_name": "",
    "created_date": "2025-06-22 07:55:14",
    "description": "Build the comment section for each post, including a list of existing comments and an input field to add a new one. This section should initially be collapsed.",
    "issue_type_name": "Task",
    "labels": "Comments, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Build the Post Comment Section UI"
  },
  {
    "_id": "10646",
    "key": "AIG-282",
    "assignee": 2,
    "components_name": "",
    "created_date": "2025-06-22 07:55:13",
    "description": "Implement the client-side logic for the 'Like' button on posts. This includes toggling the button's state, updating the like count, and making an API call to persist the like.",
    "issue_type_name": "Task",
    "labels": "API-Integration, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Implement 'Like' Functionality on Posts"
  },
  {
    "_id": "10645",
    "key": "AIG-281",
    "assignee": 2,
    "components_name": "",
    "created_date": "2025-06-22 07:55:11",
    "description": "Integrate the 'Create Post' modal with the API to submit new text-based posts. After a successful post, the modal should close and the new post should appear at the top of the feed optimistically.",
    "issue_type_name": "Task",
    "labels": "API-Integration, Posts",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: API Integration to Submit a New Post"
  },
  {
    "_id": "10644",
    "key": "AIG-280",
    "assignee": 2,
    "components_name": "",
    "created_date": "2025-06-22 07:55:10",
    "description": "Connect the News Feed to the `/api/posts` endpoint to fetch the initial set of posts. The state should be managed efficiently to display the list of posts.",
    "issue_type_name": "Task",
    "labels": "API-Integration, Feed",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: API Integration to Fetch News Feed Posts"
  },
  {
    "_id": "10643",
    "key": "AIG-279",
    "assignee": 2,
    "components_name": "",
    "created_date": "2025-06-22 07:55:09",
    "description": "Build the individual Post card component. This is a critical component that must display the author's info, timestamp, post content (text/image), and action buttons (Like, Comment, Share).",
    "issue_type_name": "Task",
    "labels": "Component-Library, Posts, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Build the Reusable Post Component"
  },
  {
    "_id": "10642",
    "key": "AIG-278",
    "assignee": 2,
    "components_name": "",
    "created_date": "2025-06-22 07:55:07",
    "description": "Develop the 'Create Post' component. This should feature the user's avatar, a text input that opens a more detailed modal on click, and buttons for adding photos or tagging friends.",
    "issue_type_name": "Task",
    "labels": "Form, Posts, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Create the 'Create Post' Component"
  },
  {
    "_id": "10641",
    "key": "AIG-277",
    "assignee": 2,
    "components_name": "",
    "created_date": "2025-06-22 07:55:06",
    "description": "Build the primary News Feed container component. This component will be the parent for the 'Create Post' module and the list of posts. It should include skeleton loaders for when data is being fetched.",
    "issue_type_name": "Task",
    "labels": "Feed, Layout, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Build the Main News Feed Container"
  },
  {
    "_id": "10640",
    "key": "AIG-276",
    "assignee": 3,
    "components_name": "",
    "created_date": "2025-06-22 07:55:04",
    "description": "Create the 'Forgot Password' page. This will contain a form where a user can enter their email address to receive a password reset link. Hook this up to the corresponding API endpoint.",
    "issue_type_name": "Task",
    "labels": "Authentication, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Build the 'Forgot Password' Flow"
  },
  {
    "_id": "10639",
    "key": "AIG-275",
    "assignee": 3,
    "components_name": "",
    "created_date": "2025-06-22 07:55:03",
    "description": "Implement the full user logout flow. The logout action must clear the auth token from storage, reset the global user state, and redirect the user to the public landing page.",
    "issue_type_name": "Task",
    "labels": "Security, State-Management",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Implement User Logout Functionality"
  },
  {
    "_id": "10638",
    "key": "AIG-274",
    "assignee": 3,
    "components_name": "",
    "created_date": "2025-06-22 07:55:02",
    "description": "Integrate the Login form with the `/api/auth/login` endpoint. On success, securely store the returned JWT token and user data in the global state, then redirect to the news feed.",
    "issue_type_name": "Task",
    "labels": "API-Integration, State-Management",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: API Integration for User Login"
  },
  {
    "_id": "10637",
    "key": "AIG-273",
    "assignee": 3,
    "components_name": "",
    "created_date": "2025-06-22 07:55:00",
    "description": "Integrate the Sign-Up form with the `/api/auth/register` endpoint. On success, redirect the user to their new feed. On failure, display the specific error message returned by the API.",
    "issue_type_name": "Task",
    "labels": "API-Integration",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: API Integration for User Registration"
  },
  {
    "_id": "10636",
    "key": "AIG-272",
    "assignee": 3,
    "components_name": "",
    "created_date": "2025-06-22 07:54:58",
    "description": "Develop the user login form, including fields for email and password, a 'Remember Me' checkbox, and a 'Forgot Password?' link. Ensure error messages from the API are handled gracefully.",
    "issue_type_name": "Task",
    "labels": "Form, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Create the User Login Form Component"
  },
  {
    "_id": "10635",
    "key": "AIG-271",
    "assignee": 3,
    "components_name": "",
    "created_date": "2025-06-22 07:54:57",
    "description": "Develop the user registration modal/form. It requires fields for First Name, Last Name, Email, and Password. Implement comprehensive client-side validation for all fields, including email format checks and password strength indicators.",
    "issue_type_name": "Task",
    "labels": "Form, UI, Validation",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Create the User Sign-Up Form Component"
  },
  {
    "_id": "10634",
    "key": "AIG-270",
    "assignee": 3,
    "components_name": "",
    "created_date": "2025-06-22 07:54:56",
    "description": "Create the main landing page for unauthenticated users. This should feature a prominent call-to-action for signing up and a clear login form. The design must be modern, responsive, and establish the brand identity.",
    "issue_type_name": "Task",
    "labels": "Landing-Page, Onboarding, UI",
    "priority_name": "Medium",
    "projectname": "Aigile",
    "summary": "FE: Design and Build the Public Landing Page"
  }
]